# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12qgIdTSlomcNJm_Qv6kBpoHkDhryROfR
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer


train = pd.read_csv('train.csv')
x = train['Message_body']
y = train["Label"]
x_train, x_test,y_train, y_test = train_test_split(x,y,test_size = 0.2)

punct = '''!()-[]{};:'"\,<>./?@#$%^&*_~'''
def remove_punctuation(text):
  for char in text:
    if char in punct:
      text = text.replace(char,'')
  return text

x_train = x_train.apply(remove_punctuation)

import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords

nltk.download('stopwords') # do this only once
nltk.download('punkt') # do this only once

def remove_stopwords(text):
  clean_text = []
  for word in word_tokenize(text):
    if not word in stopwords.words():
      clean_text.append(word)
  return ' '.join(clean_text)

x_train = x_train.apply(remove_stopwords)
cv = CountVectorizer()
features = cv.fit_transform(x_train)


from sklearn.ensemble import RandomForestClassifier

from sklearn.neural_network import MLPClassifier
model= MLPClassifier(hidden_layer_sizes=(20,25,20),alpha=0.001,max_iter=200,activation='relu')




model.fit(features,y_train)

features_test = cv.transform(x_test)
print(model.score(features_test,y_test))

test = pd.read_csv('test.csv')
ytest=test['Message_body']


features = cv.transform(ytest)
pred=model.predict(features)
test['Label']=pred

Submission = test[['Id','Label']]
Submission.to_csv("submission.csv", index=False)